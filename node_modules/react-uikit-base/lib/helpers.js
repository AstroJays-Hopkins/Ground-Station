'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getElement = exports.queryDataAll = exports.queryData = exports.getClass = exports.getClasses = exports.stringToClasses = exports.colSpan = exports.closeClass = exports.cleanProps = exports.cleanClasses = exports.breakpoints = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _ufunc = require('ufunc');

var _utility = require('./utility');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var breakpoints = exports.breakpoints = function breakpoints() {
  var media = {
    small: 767,
    medium: 768,
    large: 960,
    xlarge: 1200
  };

  var screen = {
    small: window.innerWidth <= media.small,
    medium: window.innerWidth >= media.medium && window.innerWidth < media.large,
    large: window.innerWidth >= media.large && window.innerWidth < media.xlarge,
    xlarge: window.innerWidth >= media.xlarge
  };

  return {
    media: media,
    screen: screen
  };
};

var cleanClasses = exports.cleanClasses = function cleanClasses(c) {
  var str = (0, _ufunc.cleanAll)(c).join(' ').trim().replace(/,/gi, ' ');
  return (0, _ufunc.maybeIf)(str)(str !== '');
};

var cleanProps = exports.cleanProps = function cleanProps(ignoreKeys) {
  var ignore = [].concat(_toConsumableArray(ignoreKeys), _toConsumableArray(Object.keys(_utility.utilityCss)), ['animate', 'center', 'children', 'classes', 'contrast', 'col', 'colLarge', 'colMedium', 'colSmall', 'kitid', 'list']);

  return function (obj) {
    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || Array.isArray(obj)) return null;

    var newObj = _extends({}, obj);

    for (var i = 0; i < ignore.length; i++) {
      if (obj[ignore[i]]) {
        newObj[ignore[i]] = null;
      }
    }

    return (0, _ufunc.cleanObj)(newObj);
  };
};

var closeClass = exports.closeClass = function closeClass(alt) {
  return alt ? 'uk-close-alt' : ' uk-close';
};

var colSpan = exports.colSpan = ['1-1', '1-2', '1-3', '2-3', '1-4', '2-4', '3-4', '1-5', '2-5', '3-5', '4-5', '1-6', '2-6', '3-6', '4-6', '5-6', '1-10', '2-10', '3-10', '4-10', '5-10', '6-10', '7-10', '8-10', '9-10'];

var stringToClasses = exports.stringToClasses = function stringToClasses(str, cssClasses) {
  var classes = str.split(' ').map(function (item) {
    return cssClasses[item];
  });

  return classes.join(' ');
};

var getClasses = exports.getClasses = function getClasses(str, cssClasses) {
  return typeof str === 'string' ? stringToClasses(str, cssClasses) : '';
};

var getClass = exports.getClass = function getClass(str, cssClasses) {
  return cssClasses[str] ? cssClasses[str] : '';
};

var queryData = exports.queryData = function queryData(value) {
  return document.querySelector('[data-' + value + ']');
};

var queryDataAll = exports.queryDataAll = function queryDataAll(value) {
  return document.querySelectorAll('[data-' + value + ']');
};

var getElement = exports.getElement = function getElement(dataId) {
  return queryData('kitid="' + dataId + '"');
};

exports.default = {
  breakpoints: breakpoints,
  closeClass: closeClass,
  colSpan: colSpan,
  cleanClasses: cleanClasses,
  cleanProps: cleanProps,
  getClasses: getClasses,
  getClass: getClass,
  getElement: getElement,
  stringToClasses: stringToClasses,
  queryData: queryData,
  queryDataAll: queryDataAll
};