/*!
 * react-columns v1.0.2 - http://novascreen.github.io/react-columns/
 * MIT Licensed
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactColumns"] = factory(require("react"));
	else
		root["ReactColumns"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mq__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mapNodesToColumns__ = __webpack_require__(1);
var _jsxFileName = 'D:\\Code\\novascreen\\react-columns\\src\\index.js';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }





var Columns = function (_Component) {
  _inherits(Columns, _Component);

  function Columns(props) {
    _classCallCheck(this, Columns);

    var _this = _possibleConstructorReturn(this, _Component.call(this, props));

    _this.setColumns = _this.setColumns.bind(_this);
    _this.state = {};
    return _this;
  }

  Columns.prototype.setColumns = function setColumns() {
    this.setState({
      columns: this._columns.getValue()
    });
  };

  Columns.prototype.componentDidMount = function componentDidMount() {
    if (this.props.queries.length) {
      this._columns = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__mq__["a" /* mediaQueryMapper */])({
        queries: this.props.queries,
        valueKey: 'columns',
        defaultValue: this.props.queries.length ? 1 : this.props.columns,
        onChange: this.setColumns
      });
      this.setColumns();
    }
  };

  Columns.prototype.componentWillUnmount = function componentWillUnmount() {
    if (this._columns) {
      this._columns.removeListeners();
    }
  };

  Columns.prototype.renderColumns = function renderColumns(columns) {
    var _this2 = this;

    var _props = this.props,
        children = _props.children,
        dimensions = _props.dimensions,
        gap = _props.gap;

    var columnStyles = {
      boxSizing: 'border-box',
      float: 'left',
      width: 1 / columns * 100 + '%',
      paddingLeft: gap,
      paddingRight: gap
    };
    var renderedColumns = children;

    if (columns > 1) {
      var columnsContainers = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__mapNodesToColumns__["a" /* default */])({ children: children, columns: columns, dimensions: dimensions });
      renderedColumns = columnsContainers.map(function (column, i) {
        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
          'div',
          { key: i, style: columnStyles, __source: {
              fileName: _jsxFileName,
              lineNumber: 50
            },
            __self: _this2
          },
          column
        );
      });
    }

    return renderedColumns;
  };

  Columns.prototype.render = function render() {
    var _props2 = this.props,
        className = _props2.className,
        gap = _props2.gap,
        rootStyles = _props2.rootStyles;
    var _state$columns = this.state.columns,
        columns = _state$columns === undefined ? this.props.columns : _state$columns;

    var rowStyles = columns === 1 ? {} : {
      marginLeft: 'calc(' + gap + ' * -1)',
      marginRight: 'calc(' + gap + ' * -1)'
    };

    return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
      'div',
      { className: className, style: rootStyles, __source: {
          fileName: _jsxFileName,
          lineNumber: 66
        },
        __self: this
      },
      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(
        'div',
        { style: rowStyles, __source: {
            fileName: _jsxFileName,
            lineNumber: 67
          },
          __self: this
        },
        this.renderColumns(columns),
        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div', { style: { clear: 'both' }, __source: {
            fileName: _jsxFileName,
            lineNumber: 69
          },
          __self: this
        })
      )
    );
  };

  return Columns;
}(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

Columns.defaultProps = {
  className: '',
  rootStyles: {
    overflowX: 'hidden'
  },
  queries: [],
  columns: 3,
  gap: '0px'
};

Columns.propTypes = {
  className: __WEBPACK_IMPORTED_MODULE_0_react__["PropTypes"].string,
  rootStyles: __WEBPACK_IMPORTED_MODULE_0_react__["PropTypes"].object,
  queries: __WEBPACK_IMPORTED_MODULE_0_react__["PropTypes"].array,
  columns: __WEBPACK_IMPORTED_MODULE_0_react__["PropTypes"].number,
  gap: __WEBPACK_IMPORTED_MODULE_0_react__["PropTypes"].string
};

/* harmony default export */ __webpack_exports__["default"] = Columns;

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = mapNodesToColumns;
function mapNodesToColumns() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$children = _ref.children,
      children = _ref$children === undefined ? [] : _ref$children,
      _ref$columns = _ref.columns,
      columns = _ref$columns === undefined ? 1 : _ref$columns,
      _ref$dimensions = _ref.dimensions,
      dimensions = _ref$dimensions === undefined ? [] : _ref$dimensions;

  var nodes = [];
  var heights = [];

  if (columns === 1) {
    return children;
  }

  // use dimensions to calculate the best column for each child
  if (dimensions.length && dimensions.length === children.length) {
    for (var i = 0; i < columns; i++) {
      nodes[i] = [];
      heights[i] = 0;
    }
    children.forEach(function (child, i) {
      var _dimensions$i = dimensions[i],
          width = _dimensions$i.width,
          height = _dimensions$i.height;

      var index = heights.indexOf(Math.min.apply(Math, heights));
      nodes[index].push(child);
      heights[index] += height / width;
    });
  }
  // equally spread the children across the columns
  else {
      var _loop = function _loop(_i) {
        nodes[_i] = children.filter(function (child, j) {
          return j % columns === _i;
        });
      };

      for (var _i = 0; _i < columns; _i++) {
        _loop(_i);
      }
    }

  return nodes;
}

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export mediaQuery */
/* harmony export (immutable) */ __webpack_exports__["a"] = mediaQueryMapper;
var mediaQueries = {};

function mediaQuery() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$query = _ref.query,
      query = _ref$query === undefined ? '' : _ref$query,
      _ref$full = _ref.full,
      full = _ref$full === undefined ? false : _ref$full,
      _ref$onChange = _ref.onChange,
      onChange = _ref$onChange === undefined ? function () {} : _ref$onChange;

  var result = {
    query: query,
    full: full,
    queryMatches: false,
    _mq: null
  };
  if (!query) {
    return result;
  }

  function listener(mq) {
    result.queryMatches = mq.matches;
    onChange(result.queryMatches);
  }
  function removeListener() {
    result._mq.removeListener(listener);
  }

  result.query = !full && query[query.length - 1] !== ')' ? '(' + query + ')' : query;

  if (!mediaQueries[result.query]) {
    mediaQueries[result.query] = window.matchMedia(result.query);
  }
  result._mq = mediaQueries[result.query];
  result.queryMatches = result._mq.matches;
  result.removeListener = removeListener;

  result._mq.addListener(listener);

  return result;
}

function mediaQueryMapper() {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref2$queries = _ref2.queries,
      queries = _ref2$queries === undefined ? [] : _ref2$queries,
      _ref2$valueKey = _ref2.valueKey,
      valueKey = _ref2$valueKey === undefined ? 'value' : _ref2$valueKey,
      _ref2$defaultValue = _ref2.defaultValue,
      defaultValue = _ref2$defaultValue === undefined ? '' : _ref2$defaultValue,
      _ref2$onChange = _ref2.onChange,
      onChange = _ref2$onChange === undefined ? function () {} : _ref2$onChange;

  var mQs = queries.map(function (query) {
    return mediaQuery({
      query: query.query,
      full: query.full,
      onChange: onMqChange
    });
  });

  function getValue() {
    var value = defaultValue;
    mQs.forEach(function (mQ, i) {
      if (mQ.queryMatches) {
        value = queries[i][valueKey];
      }
    });
    return value;
  }

  function onMqChange(mq) {
    onChange(getValue());
  }

  function removeListeners() {
    mQs.forEach(function (mq, i) {
      mq.removeListener();
    });
  }

  return { getValue: getValue, removeListeners: removeListeners };
}

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(0);


/***/ })
/******/ ]);
});